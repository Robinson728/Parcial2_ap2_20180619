@page "/rCobros"
@page "/rCobros/{CobroId:int}"

@inject IToastService toast

<EditForm Model="cobros" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">

        <div class="card-header">
            <h2>Registro de Cobros</h2>
        </div>

        <div class="card-body">
            <form>
                <div class="row">
                    <div class="col form-group">
                        <label>Cobro Id</label>
                        <div class="input-group">
                            <InputNumber  @bind-Value="cobros.CobroId" class="form-control" col-4 />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"><i class="oi oi-magnifying-glass px-3" /></button>
                            </div>
                        </div>
                    </div>

                    <div class="col form-group">
                        <label>Fecha</label>
                        <InputDate @bind-Value="cobros.Fecha" class="form-control"  />
                    </div>
                </div>

                <div class="form-group">
                    <label>Cliente</label>
                    <InputSelect @bind-Value="cobros.ClienteId" class="form-control" @onclick="GetPendientes">
                        @foreach (var item in listaClientes)
                        {
                            <option value="@item.ClienteId">@item.Nombres</option>
                        }
                    </InputSelect>
                </div>

                <div class="card">

                    <div class="card-header">
                        <h5>Facturas Pendientes</h5>
                    </div>

                    <div class="card-body">
                        <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                            <table class="table table-striped">

                                <thead class="thead-light">
                                    <tr>
                                        <th>Id</th>
                                        <th>Fecha</th>
                                        <th>Monto</th>
                                        <th>Balance</th>
                                        <th>Cobrado</th>
                                        <th>Pagar</th>
                                    </tr>
                                </thead>
                                <tbody>
                                  @foreach (var item in cobros.Detalle)
                                   {
                                      <tr>
                                          <td>@item.VentaId</td>
                                          <td>@item.Venta.Fecha</td>
                                          <td>@item.Venta.Monto</td>
                                          <td>@item.Venta.Balance</td>
                                          <td>@item.Cobrado</td>
                                          <td><input type="checkbox" @onchange="@(() => GetCobro(item))"/></td>
                                      </tr>
                                   }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="form-group row m-1">
                                <label class="col-form-label">Totales:</label>
                                <div class="input-group col-sm-3">
                                    <InputNumber @bind-Value="cobros.Totales" class="form-control" />
                                </div>
                            </div>
                        </div>

                        <div class="col">
                            <div class="form-group row">
                                <label class="col-form-label">Total Cobrado</label>
                                <div class="col-sm-3">
                                    <InputNumber @bind-Value="cobros.Cobrado" class="form-control" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="border-info">
                    <h5>Observaciones</h5>
                    <InputTextArea @bind-Value="cobros.Observaciones" class="form-control" />
                </div>
            </form>
        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file mr-2" />Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-account-login mr-2" style="transform: rotate(90deg)" />Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash mr-2" />Eliminar</button>
            </div>
        </div>
         
    </div>
</EditForm>

@code {
    [Parameter]
    public int CobroId { get; set; }

    public Cobros cobros = new Cobros();

    public List<Clientes> listaClientes = new List<Clientes>();

    private void GetPendientes()
    {
        if (cobros.CobroId == 0)
            cobros.Detalle = VentasBLL.GetPendientes(cobros.ClienteId);
    }

    private void GetCobro(CobrosDetalle cobrosDetalle)
    {
        if (cobrosDetalle.Cobrado == 0)
        {
            cobros.Totales++;
            cobrosDetalle.Cobrado = cobrosDetalle.Venta.Balance;
            cobros.Cobrado += cobrosDetalle.Cobrado;
        }
        else
        {
            cobros.Totales--;
            cobrosDetalle.Cobrado = 0;
            cobros.Cobrado -= cobrosDetalle.Venta.Balance;
        }
    }

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();

    }

    public void Limpiar()
    {
        cobros = new Cobros();
        listaClientes = ClientesBLL.GetList(r => true);
    }

    public void Buscar()
    {
        if (cobros.CobroId > 0)
        {
            var encontrado = CobrosBLL.Buscar(cobros.CobroId);

            if (encontrado != null)
            {
                cobros.Detalle = VentasBLL.GetPagadas(cobros.ClienteId);
                this.cobros = encontrado;
            }
            else
                toast.ShowInfo("No encontrado.");
        }
    }

    public void Nuevo()
    {
        Limpiar();
    }

    public void Guardar()
    {
        if (cobros.CobroId == 0)
        {

            var guardar = CobrosBLL.Guardar(cobros);

            if (guardar)
            {
                Nuevo();
                toast.ShowSuccess("Guardado Correctamente");
            }
            else
                toast.ShowError("No fue posible guardar");

        }
        else
            toast.ShowInfo("No puede Modificar el registro");
    }

    public void Eliminar()
    {
        var eliminar = CobrosBLL.Eliminar(cobros.CobroId);

        if (eliminar)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado Correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }
}
